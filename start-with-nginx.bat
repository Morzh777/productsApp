@echo off
setlocal enabledelayedexpansion

REM Set UTF-8 encoding for Russian text
chcp 65001 >nul 2>&1

REM Set console font for better Russian text display
powershell -Command "& {$Host.UI.RawUI.Font = New-Object System.Management.Automation.Host.Size(8, 16)}" >nul 2>&1

echo üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Nginx
echo =============================

REM –û—á–∏—â–∞–µ–º –ø–æ—Ä—Ç—ã 3000, 3002 –∏ 8080 –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–Ω—è—Ç—ã
echo üßπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã...
for %%p in (3000 3002 8080) do (
    for /f "tokens=5" %%a in ('netstat -ano ^| findstr :%%p') do (
        echo ‚ö†Ô∏è  –ü–æ—Ä—Ç %%p –∑–∞–Ω—è—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º...
        taskkill /PID %%a /F >nul 2>&1
        echo ‚úÖ –ü–æ—Ä—Ç %%p –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω (PID: %%a)
    )
)
timeout /t 2 /nobreak >nul

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Nginx
where nginx >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Nginx –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Nginx –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.
    echo üì• –°–∫–∞—á–∞–π—Ç–µ —Å https://nginx.org/en/download.html
    echo üí° –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ Chocolatey: choco install nginx
    pause
    exit /b 1
)

REM –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ —Ñ–æ–Ω–µ
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º backend...
cd backend\nest-api

REM –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if not exist .env (
    echo üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª...
    (
        echo DATABASE_URL="postgresql://neondb_owner:npg_vGY5fHwSoqZ9@ep-wandering-king-agz11e0s-pooler.c-2.eu-central-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require&connection_limit=100&pool_timeout=120&connect_timeout=120"
        echo PORT=3002
        echo NODE_ENV=production
    ) > .env
    echo ‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
)

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if not exist node_modules (
    echo üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ backend...
    call npm install
)

REM –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç
echo üîß –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç...
call npx prisma generate

REM –°–æ–±–∏—Ä–∞–µ–º backend
echo üî® –°–æ–±–∏—Ä–∞–µ–º backend...
call npm run build

REM –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ —Ñ–æ–Ω–µ
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ —Ñ–æ–Ω–µ...
start /B cmd /c "npm run start:prod"
timeout /t 5 /nobreak >nul

REM –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd ..\..

REM –ó–∞–ø—É—Å–∫–∞–µ–º Nginx
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Nginx...
nginx -c "%CD%\nginx.conf"

REM –ó–∞–ø—É—Å–∫–∞–µ–º frontend
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º frontend...
cd frontend\next-app

REM –°–æ–∑–¥–∞–µ–º .env.local —Ñ–∞–π–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Nginx
if not exist .env.local (
    echo üìù –°–æ–∑–¥–∞–µ–º .env.local —Ñ–∞–π–ª –¥–ª—è Nginx...
    (
        echo # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Nginx
        echo NEXT_PUBLIC_API_URL=http://localhost:8080/api
    ) > .env.local
    echo ‚úÖ .env.local —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
)

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if not exist node_modules (
    echo üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend...
    call npm install
)

REM –°–æ–±–∏—Ä–∞–µ–º frontend
echo üî® –°–æ–±–∏—Ä–∞–µ–º frontend...
set NODE_ENV=
call npm run build

REM –ó–∞–ø—É—Å–∫–∞–µ–º frontend –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º frontend...
start /B cmd /c "npm run start"

echo.
echo üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!
echo üåê Frontend: http://localhost:8080
echo üîó Backend API: http://localhost:8080/api
echo üìö Swagger: http://localhost:8080/swagger
echo.
echo –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É...

pause >nul

REM –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
echo.
echo üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...
taskkill /F /IM nginx.exe >nul 2>&1
taskkill /F /IM node.exe >nul 2>&1
echo ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
