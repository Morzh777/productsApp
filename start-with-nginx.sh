#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Nginx"
echo "============================="

# –û—á–∏—â–∞–µ–º –ø–æ—Ä—Ç—ã 3000, 3002 –∏ 8080 –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–Ω—è—Ç—ã
echo "üßπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã..."
for port in 3000 3002 8080; do
    if lsof -i :$port > /dev/null 2>&1; then
        echo "‚ö†Ô∏è  –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º..."
        case $port in
            3000) pkill -f "next.*3000" 2>/dev/null || true ;;
            3002) pkill -f "nest-api" 2>/dev/null || true ;;
            8080) nginx -s stop 2>/dev/null || true ;;
        esac
        sleep 1
        echo "‚úÖ –ü–æ—Ä—Ç $port –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Nginx
if ! command -v nginx &> /dev/null; then
    echo "‚ùå Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Nginx –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    echo "   macOS: brew install nginx"
    echo "   Ubuntu/Debian: sudo apt install nginx"
    echo "   CentOS/RHEL: sudo yum install nginx"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ —Ñ–æ–Ω–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º backend..."
cd backend/nest-api

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cat > .env << EOF
DATABASE_URL="postgresql://neondb_owner:npg_vGY5fHwSoqZ9@ep-wandering-king-agz11e0s-pooler.c-2.eu-central-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require&connection_limit=5&pool_timeout=20&connect_timeout=60"
PORT=3002
NODE_ENV=development
EOF
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ backend..."
    npm install
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç
echo "üîß –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç..."
npx prisma generate

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ —Ñ–æ–Ω–µ
npm run start:dev &
BACKEND_PID=$!

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd ../..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend..."
sleep 5

# –ó–∞–ø—É—Å–∫–∞–µ–º Nginx
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Nginx..."
nginx -c $(pwd)/nginx.conf

# –ó–∞–ø—É—Å–∫–∞–µ–º frontend
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º frontend..."
cd frontend/next-app

# –°–æ–∑–¥–∞–µ–º .env.local —Ñ–∞–π–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Nginx
if [ ! -f .env.local ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º .env.local —Ñ–∞–π–ª –¥–ª—è Nginx..."
    cat > .env.local << EOF
# –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Nginx
NEXT_PUBLIC_API_URL=http://localhost:8080/api
EOF
    echo "‚úÖ .env.local —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend..."
    npm install
fi

echo ""
echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "üåê Frontend: http://localhost:8080"
echo "üîó Backend API: http://localhost:8080/api"
echo "üìö Swagger: http://localhost:8080/swagger"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    kill $BACKEND_PID 2>/dev/null
    nginx -s stop
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫–∞–µ–º frontend
npm run dev
